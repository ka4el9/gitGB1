#include <iostream>
#include "lesson3_1.cpp" //Без подключения данного файла файл lesson3 не компилируется и выдает ошибку. 

int main() {

// 1.Написать программу, вычисляющую выражение a * (b + (c / d)) и выводящую результат с плавающей точкой, где a, b, c, d – целочисленные константы.  Используйте static_cast или С-Style cast к float чтобы выполнить точное деление.

	const int a = 5;
	const int b = 6;
	const int c = 7;
	const int d = 8;

// Variant 1
	
	std::cout << a*(b + (c/d)) << '\n'; // Выводит целое число без остатка

// Variant 2
	
	double e;
	e = a*(b + (1.0*c/d)); // Умножили значение с на 1.0
	std::cout << e << '\n';

// Variant 3	
	
	std::cout << a*(b + ((double)c/d)) << '\n'; // Решение с помощью C-style

// Variant 4

	std::cout << a*(b + (static_cast <float>(c)/d)) << '\n'; // Решение с помощью static_cast

// 2. Дано целое число. Если оно меньше или равно 21, то выведите на экран разницу между этим числом и числом 21. Если же заданное число больше, чем 21, необходимо вывести удвоенную разницу между этим числом и 21. При выполнении задания следует использовать тернарный оператор (?:).

	int i;
	
	std::cout << "Enter an integer:";
	std::cin >> i;
	std::cout << ((i <= 21) ? (i - 21) : (i - 21)*2) << '\n';

// 3. Описать трёхмерный целочисленный массив, размером 3х3х3, создать указатель на значения внутри массива и при помощи операции разыменования вывести на экран значение центральной ячейки получившегося куба [1][1][1] 

	int m[3][3][3] = { { {1,2,3}, {4,5,6}, {7,8,9} },
						{ {10,11,12}, {13,14,15}, {16,17,18} },
						{ {19,20,21}, {22,23,24}, {25,26,27} } };
	
	std::cout << *(*(*(m + 1) + 1) + 1) << '\n';


// 4. Написать программу, вычисляющую выражение из первого задания, а переменные для неё инициализировать в другом файле.

	extern const int A;
	extern const int B;
	extern const int C;
	extern const int D;

	std::cout << A*(B + ((double)C/D)) << '\n';

	return 0;
}






